--- a/api/wext.h
+++ b/api/wext.h
@@ -427,7 +427,7 @@
 /* ----------------------- OTHER CONSTANTS ----------------------- */
 
 /* Maximum frequencies in the range struct */
-#define IW_MAX_FREQUENCIES	32
+#define IW_MAX_FREQUENCIES	59
 /* Note : if you have something like 80 frequencies,
  * don't increase this constant and don't fill the frequency list.
  * The user will be able to set by channel anyway... */
@@ -445,7 +445,7 @@
 
 /* Maximum of address that you may get in the
    list of access points in range */
-#define IW_MAX_AP		64
+#define IW_MAX_AP		128
 
 /* Maximum size of the ESSID and NICKN strings */
 #define IW_ESSID_MAX_SIZE	32
@@ -458,6 +458,7 @@ /* Modes of operation */
 #define IW_MODE_REPEAT	4	/* Wireless Repeater (forwarder) */
 #define IW_MODE_SECOND	5	/* Secondary master/repeater (backup) */
 #define IW_MODE_MONITOR	6	/* Passive monitor (listen only) */
+#define IW_MODE_MESH	7	/* Mesh (IEEE 802.11s) network */
 
 /* Statistics flags (bitmask in updated) */
 #define IW_QUAL_QUAL_UPDATED	0x01	/* Value was updated since last read */
@@ -543,7 +544,7 @@ /* Scanning request flags */
 #define IW_SCAN_TYPE_ACTIVE 0
 #define IW_SCAN_TYPE_PASSIVE 1
 /* Maximum size of returned data */
-#define IW_SCAN_MAX_DATA	4096	/* In bytes */
+#define IW_SCAN_MAX_DATA	16384	/* In bytes */
 
 /* Max number of char in custom event - use multiple of them if needed */
 #define IW_CUSTOM_MAX		256	/* In bytes */
@@ -677,7 +678,7 @@ /* --------------------------- SUBTYPES --------------------------- */
  */
 struct	iw_param
 {
-  int32_t		value;		/* The value of the parameter itself */
+  uint64_t		value;		/* The value of the parameter itself */
   uint8_t		fixed;		/* Hardware should not use auto select */
   uint8_t		disabled;	/* Disable the feature */
   uint16_t		flags;		/* Various specifc flags (if any) */
@@ -988,6 +989,9 @@ struct	iw_range
 	uint16_t		old_num_channels;
 	uint8_t		old_num_frequency;
 
+	/* Scan capabilities */
+	uint8_t		scan_capa; 	/* IW_SCAN_CAPA_* bit field */
+
 	/* Wireless event capability bitmasks */
 	uint32_t		event_capa[6];
 
@@ -1013,7 +1017,7 @@ struct	iw_range
 
 	/* Rates */
 	uint8_t		num_bitrates;	/* Number of entries in the list */
-	int32_t		bitrate[IW_MAX_BITRATES];	/* list, in bps */
+	uint64_t		bitrate[IW_MAX_BITRATES];	/* list, in bps */
 
 	/* RTS threshold */
 	int32_t		min_rts;	/* Minimal RTS threshold */
