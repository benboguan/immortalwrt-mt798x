--- a/mt_wifi/os/linux/ap_ioctl.c
+++ b/mt_wifi/os/linux/ap_ioctl.c
@@ -824,8 +824,55 @@ INT rt28xx_ap_ioctl(void *net_dev_obj, v
 		break;
 	}
 	case SIOCGIWRANGE:	/*Get range of parameters */
-		Status = NDIS_STATUS_SUCCESS;
+	{
+		if (wrqin->u.data.pointer) {
+#if (KERNEL_VERSION(5, 4, 0) > LINUX_VERSION_CODE)
+			if (access_ok(VERIFY_WRITE, wrqin->u.data.pointer, sizeof(struct iw_range)) != TRUE)
+#else
+			if (access_ok(wrqin->u.data.pointer, sizeof(struct iw_range)) != TRUE)
+#endif
+				break;
+
+			if (sizeof(struct iw_range) <= wrq->u.data.length) {
+				struct iw_range range;
+				UCHAR BandIdx;
+				UINT32 Freq;
+				USHORT i = 0;
+				CHANNEL_CTRL *pChCtrl;
+				PRTMP_ADAPTER pAdin = (PRTMP_ADAPTER)pAd;
+				wdev = pIoctlConfig->wdev;
+
+				memset(&range, 0, sizeof(struct iw_range));
+
+				range.we_version_compiled = WIRELESS_EXT;
+				range.we_version_source = 21;
+				range.max_qual.qual = 100;
+				range.max_qual.level = 0; /* dB */
+				range.max_qual.noise = 0; /* dB */
+
+				BandIdx = wlan_operate_get_ch_band(wdev);
+				pChCtrl = hc_get_channel_ctrl(pAdin->hdev_ctrl, BandIdx);
+
+				for (i = 0; i < pChCtrl->ChListNum && i < IW_MAX_FREQUENCIES; i++) {
+					RTMP_MapChannelID2KHZ(pChCtrl->ChList[i].Channel, &Freq);
+					range.freq[i].m = Freq / 1000;
+					range.freq[i].e = 6;
+					range.freq[i].i = pChCtrl->ChList[i].Channel;
+				}
+
+				range.num_channels = i;
+				range.num_frequency = i;
+
+				wrqin->u.data.length = sizeof(struct iw_range);
+
+				if (copy_to_user(wrqin->u.data.pointer, &range, sizeof(struct iw_range)))
+					Status = RTMP_IO_EFAULT;
+			} else {
+				Status = RTMP_IO_E2BIG;
+			}
+		}
 		break;
+	}
 	case SIOCGIWRETRY:	/*get retry limits and lifetime */
 	case SIOCSIWRETRY:	/*set retry limits and lifetime */
 		Status = RTMP_IO_EOPNOTSUPP;
@@ -838,7 +885,7 @@ INT rt28xx_ap_ioctl(void *net_dev_obj, v
 		if ((wdev != NULL) && (wdev->if_up_down_state == FALSE)) {
 			if (wdev_down_exec_ioctl(wrq, subcmd) == FALSE) {
 				MTWF_DBG(pAd, DBG_CAT_CFG, DBG_SUBCAT_ALL, DBG_LVL_ERROR,
-					"interface is down, cmd [%x] return!!!\n", cmd);
+					"interface is down, cmd [%x] subcmd [%x] return!!!\n", cmd, subcmd);
 				return -ENETDOWN;
 			}
 		}
--- a/mt_wifi/embedded/ap/ap_cfg.c
+++ b/mt_wifi/embedded/ap/ap_cfg.c
@@ -10383,6 +10383,26 @@ INT RTMPAPQueryInformation(
 		MTWF_DBG(pAd, DBG_CAT_CFG, DBG_SUBCAT_ALL, DBG_LVL_INFO, "Query::OID_802_11_ASSOLIST\n");
 		RTMPAPGetAssoMacTable(pAd, wrq);
 		break;
+
+	case OID_802_11_GET_COUNTRY_CODE: {
+		INT j;
+		CHAR ccode[4]={0};
+		wrq->u.data.length = sizeof(UINT);
+		for(j=0; j < NUM_OF_COUNTRIES; j++)
+		{
+			if ( !strncmp(pAd->CommonCfg.CountryCode,  allCountry[j].IsoName, 2) )
+			{
+				sprintf(ccode, "%d", allCountry[j].CountryNum);
+				if (copy_to_user(wrq->u.data.pointer, &ccode, wrq->u.data.length))
+				{
+					Status = -EFAULT;
+				}
+
+				break;
+			}
+		}
+		break;
+	}
 #ifdef WSC_AP_SUPPORT
 
 	case OID_802_11_CURRENT_CRED:
@@ -29627,6 +29647,12 @@ BOOLEAN wdev_down_exec_ioctl(RTMP_IOCTL_
 		}
 	}
 
+	if (cmd == OID_802_11_COUNTRYCODE)
+		retval = TRUE;
+
+	if (cmd == OID_802_11_GET_COUNTRY_CODE)
+		retval = TRUE;
+
 	if (buf)
 		os_free_mem(buf);
 
